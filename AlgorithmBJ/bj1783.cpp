#include <iostream>
using namespace std;

int main() 
{
    //INPUT
    int n, m;    cin >> n >> m;

    //SEARCH
    if (n == 1) cout << 1;
    else if (n == 2) cout << min(4, (m + 1) / 2);
    else if (m < 7) cout << min(4, m);
    else cout << m - 2;

    /*
    1. 2칸 위로, 1칸 오른쪽
    2. 1칸 위로, 2칸 오른쪽
    3. 1칸 아래로, 2칸 오른쪽
    4. 2칸 아래로, 1칸 오른쪽
        0)
        n==1 이동불가, 자신이 있던 자리 한칸만 방문
        1)
        n == 2, 이동 횟수가 4 미만
        제약 없음
        2,3번 방법으로 이동 
        즉 (M+1)/2칸 방문 가능
        
        n==2, 이동 횟수가 4 이상
        2,3번 방법만 사용 가능하므로 4번 이상 이동하면 안된다.
        3번만 이동 하는거로 한다 -> 4칸 방문 가능.

        -->  min(4, (m + 1) / 2)

        2)
        m<7, n>=3 
        이 경우 4가지 방법을 모두 써서 이동하는것은 불가능하다

        m<7, n>=3, 이동횟수가 4 미만
        제약없음
        1,4번 방법으로 이동
        m칸 이동 가능

        m<7, n>=3, 이동횟수가 4 이상
        1,4번 방법만 사용 가능하므로 4번 이상 이동하면 안된다.
        3번만 이동 하는거로 한다 -> 4칸 방문 가능

        -->min(4, m)

        3)
        그 외에는 항상 4가지 방법을 모두 사용할 수 있다.
        (가로7,세로4일 때 모든 수 쓰는법 그림으로넣기 --> 이때 5칸 이동가능)
        
        가로 1에서 7까지는 1~4번 방법을 써서 5칸 이동한다 
        이제 남은 가로 길이는 M-7이다
        여기서 부터는 1,4번 방법을 반복 사용하여 M-7칸 만큼 이동 가능하다.
        
        (1~4번 방법을 써서 이동한) 5칸 + M-7

        -->M-2

    */
}